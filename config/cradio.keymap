#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>


#define LT0  4  // left-top row
#define LT1  3
#define LT2  2
#define LT3  1
#define LT4  0

#define RT0  5  // right-top row
#define RT1  6
#define RT2  7
#define RT3  8
#define RT4  9

#define LM0 14  // left-middle row
#define LM1 13
#define LM2 12
#define LM3 11
#define LM4 10

#define RM0 15  // right-middle row
#define RM1 16
#define RM2 17
#define RM3 18
#define RM4 19

#define LB0 24  // left-bottom row
#define LB1 23
#define LB2 22
#define LB3 21
#define LB4 20

#define RB0 25  // right-bottom row
#define RB1 26
#define RB2 27
#define RB3 28
#define RB4 29

#define LH0 31  // left thumb keys
#define LH1 30

#define RH0 32  // right thumb keys
#define RH1 33


#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4  // left-hand keys
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4  // right-hand keys
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2                                      // thumb keys


/* left-hand HRMs */
ZMK_HOLD_TAP(hml,
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <175>;                // repeat on tap-into-hold
    require-prior-idle-ms = <150>;
    bindings = <&kp>, <&kp>;
    /*hold-trigger-key-positions = <KEYS_R THUMBS>;*/
    hold-trigger-on-release;             // delay positional check until key-release
)

/* right-hand HRMs */
ZMK_HOLD_TAP(hmr,
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <175>;                // repeat on tap-into-hold
    require-prior-idle-ms = <150>;
    bindings = <&kp>, <&kp>;
    /*hold-trigger-key-positions = <KEYS_L THUMBS>;*/
    hold-trigger-on-release;             // delay positional check until key-release
)

#define MAKE_HRM(NAME, HOLD, TAP, TRIGGER_POS) \
    ZMK_HOLD_TAP(NAME, \
        flavor = "balanced"; \
        tapping-term-ms = <280>; \
        quick-tap-ms = <QUICK_TAP_MS>; \
        require-prior-idle-ms = <150>; \
        bindings = <HOLD>, <TAP>; \
        hold-trigger-key-positions = <TRIGGER_POS>; \
        hold-trigger-on-release; \
    )
MAKE_HRM(hml, &kp, &kp, KEYS_R THUMBS)  // left-hand HRMs
MAKE_HRM(hmr, &kp, &kp, KEYS_L THUMBS)  // right-hand HRMs

MAKE_HRM(hml_repeat, &kp, &key_repeat, KEYS_R THUMBS)  // used for HRM-combo
MAKE_HRM(hmr_lpar_lt, &kp, &lpar_lt, KEYS_L THUMBS)    // "    "   "   "
MAKE_HRM(hmr_rpar_gt, &kp, &rpar_gt, KEYS_L THUMBS)    // "    "   "   "



&sk {
    release-after-ms = <2000>;
    quick-release;

    /delete-property/ ignore-modifiers;
};

/ {
    combos {
        compatible = "zmk,combos";

        CrtlX {
            bindings = <&kp LC(X)>;
            key-positions = <22 21>;
        };

        CrtlC {
            bindings = <&kp LC(C)>;
            key-positions = <22 23>;
        };

        CtrlV {
            bindings = <&kp LC(V)>;
            key-positions = <23 24>;
        };
/*
        Lshift {
            bindings = <&sk LEFT_SHIFT>;
            key-positions = <10 11>;
        };

        LAlt {
            bindings = <&sk LEFT_ALT>;
            key-positions = <11 12>;
        };

        LCtrl {
            bindings = <&sk LCTRL>;
            key-positions = <12 13>;
        };

        LGUI_ {
            bindings = <&sk LEFT_GUI>;
            key-positions = <13 14>;
        };

        RSHIFT_ {
            bindings = <&sk RIGHT_SHIFT>;
            key-positions = <19 18>;
        };

        RALT_ {
            bindings = <&sk RIGHT_ALT>;
            key-positions = <18 17>;
        };

        RCTRL_ {
            bindings = <&sk RCTRL>;
            key-positions = <17 16>;
        };

        RGUI_ {
            bindings = <&sk RIGHT_GUI>;
            key-positions = <15 16>;
        };
        */
    };
    
/*
    macros {
        new_macro: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>, <&macro_press>, <&kp>, <&macro_press>;

            label = "NEW_MACRO";
        };
    };
    */

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&kp Q  &kp W  &kp F  &kp P    &kp G        &kp J      &kp L     &kp U      &kp Y    &kp SEMI
&hml LGUI A   &hml LALT R   &hml LSHFT S  &hml LCTRL T    &kp D     &kp H  &hmr LCTRL N  &hmr RSHFT E  &hmr LALT I   &hmr LGUI O
&kp Z  &kp X  &kp C  &kp V    &kp B        &kp K      &kp M     &kp COMMA  &kp DOT  &kp FSLH
                     &kp TAB  &kp ENTER    &kp SPACE  &kp BSPC
            >;
        };
    };
};

